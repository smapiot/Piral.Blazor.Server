import{_ as a,c as t,o as r,a0 as o}from"./chunks/framework.BJMahNig.js";const d=JSON.parse('{"title":"SPA Example: Tractor Shop","description":"","frontmatter":{},"headers":[],"relativePath":"examples/spa/tractor-shop.md","filePath":"examples/spa/tractor-shop.md","lastUpdated":1743091014000}'),p={name:"examples/spa/tractor-shop.md"};function s(l,e,i,c,n,h){return r(),t("div",null,e[0]||(e[0]=[o('<h1 id="spa-example-tractor-shop" tabindex="-1">SPA Example: Tractor Shop <a class="header-anchor" href="#spa-example-tractor-shop" aria-label="Permalink to &quot;SPA Example: Tractor Shop&quot;">â€‹</a></h1><p>This example reconstructs the <a href="https://micro-frontends.org/tractor-store/" target="_blank" rel="noreferrer">Tractor Store v2</a> example from Michael Geers. It separates each micro frontend in its own project - making them truly independent and deployable as individual pieces.</p><p>Besides the implementation of the Tractor Store the example also shows how debugging of individual pieces can work in a joint setup. For this a few extras have been included.</p><p>The example includes:</p><ul><li>App Shell project (&quot;app&quot;)</li><li>Three micro frontend projects (checkout, decide, explore)</li></ul><p>The code for this example is available at <a href="https://github.com/piral-samples/tractor-v2-blazor-wasm" target="_blank" rel="noreferrer">github.com/piral-samples/tractor-v2-blazor-wasm</a>.</p>',6)]))}const u=a(p,[["render",s]]);export{d as __pageData,u as default};
