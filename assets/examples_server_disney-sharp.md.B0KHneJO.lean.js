import{_ as a,c as r,o as s,a0 as t}from"./chunks/framework.BJMahNig.js";const m=JSON.parse('{"title":"Server Example: Disney Sharp","description":"","frontmatter":{},"headers":[],"relativePath":"examples/server/disney-sharp.md","filePath":"examples/server/disney-sharp.md","lastUpdated":1743091014000}'),i={name:"examples/server/disney-sharp.md"};function p(n,e,l,o,d,c){return s(),r("div",null,e[0]||(e[0]=[t('<h1 id="server-example-disney-sharp" tabindex="-1">Server Example: Disney Sharp <a class="header-anchor" href="#server-example-disney-sharp" aria-label="Permalink to &quot;Server Example: Disney Sharp&quot;">â€‹</a></h1><p>This example portrays a movie and TV series web app. It separates each micro frontend in its own project - making them truly independent and deployable as individual pieces.</p><p>The example includes:</p><ul><li>App Shell project (&quot;Flixx)</li><li>Three micro frontend projects (Catalog, Details, Search)</li><li>One empty micro frontend project showing how joint debugging / development works (&quot;All&quot;)</li></ul><p>The code for this example is available at <a href="https://github.com/FlorianRappl/ddc24-devsession" target="_blank" rel="noreferrer">github.com/FlorianRappl/ddc24-devsession</a>.</p>',5)]))}const u=a(i,[["render",p]]);export{m as __pageData,u as default};
